{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n}","<ng-container>\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\n    Test 400 Validation Error</button>\n\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n</ng-container>","<div class=\"form-group\">\n  <input \n    type=\"text\" \n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\"\n    [formControl]='$any(ngControl).control'\n    placeholder=\"{{label}}\"\n    bsDatepicker\n    [bsConfig]='bsConfig'\n    [maxDate]='maxDate'\n  >\n  <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">\n    {{label}} is required\n  </div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() maxDate!: Date;\n  bsConfig!: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './../_services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm!: FormGroup;\n  maxDate!: Date;\n  validationErrors: string[] = [];\n\n  constructor(private accountService: AccountService,\n    private toastr: ToastrService, private fb: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      gender: ['male'],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required,\n        Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as {[key: string]: AbstractControl}) \n          [matchTo].value ? null : {isMatching: true};\n      }\n\n      return null;\n    }\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    }, error => {\n      this.validationErrors = error;\n    })\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr/>\n\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"male\" formControlName='gender'> Male\n    </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" value=\"female\" formControlName='gender' class=\"ml-3\"> Female\n    </label>\n  </div>\n\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"username\"]'\n    [label]='\"Username\"'>\n  </app-text-input>\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"knownAs\"]'\n    [label]='\"Known As\"'>\n  </app-text-input>\n  <app-date-input \n    [formControl]='$any(registerForm).controls[\"dateOfBirth\"]'\n    [label]='\"Date of Birth\"'\n    [maxDate]='maxDate'>\n  </app-date-input>\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"city\"]'\n    [label]='\"City\"'>\n  </app-text-input>\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"country\"]'\n    [label]='\"Country\"'>\n  </app-text-input>\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"password\"]'\n    [label]='\"Password\"'\n    [type]='\"password\"'>\n  </app-text-input>\n  <app-text-input \n    [formControl]='$any(registerForm).controls[\"confirmPassword\"]'\n    [label]='\"Confirm Password\"'\n    [type]='\"password\"'>\n  </app-text-input>\n\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\n  </div>\n</form>","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul \n      #scrollMe \n      style=\"overflow: scroll; height: 500px;\"\n      [scrollTop]=\"scrollMe.scrollHeight\"\n      *ngIf=\"(messageService.messageThread$ | async)?.length! > 0\" \n      class=\"chat\">\n      <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n        <div>\n          <span class=\"chat-img float-right\">\n            <img src=\"{{message.senderPhotoUrl || './../../../../assets/user.png'}}\" \n            alt=\"{{message.senderUsername}}\" class=\"rounded-circle\">\n          </span>\n\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                <span class=\"text-danger\" *ngIf=\"!message.dateRead \n                  && message.senderUsername !== username\">\n                  (unread)\n                </span>\n                <span class=\"text-success\" *ngIf=\"message.dateRead \n                  && message.senderUsername !== username\">\n                  (read {{message.dateRead | timeago}})\n                </span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n      <div class=\"input-group\">\n        <input \n          name=\"messageContent\"\n          required\n          [(ngModel)]=\"messageContent\"\n          type=\"text\" \n          class=\"form-control input-sm\" \n          placeholder=\"Send a private message\">\n        <div class=\"input-group-append\">\n          <button \n            [disabled]=\"!messageForm.valid\"\n            class=\"btn btn-primary\" \n            type=\"submit\">Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from './../../_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm!: NgForm;\n  @Input() messages!: Message[];\n  @Input() username!: string;\n  messageContent!: string;\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void { }\n\n  sendMessage() {\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageForm.reset();\n    })\n  }\n}\n","<div class='row'>\n  <div class='col-sm-2' *ngFor='let photo of photos'>\n    <h4>{{photo.username}}</h4>\n    <img src='{{photo.url}}' class='img-thumbnail p-1' alt='{{photo.username}}'>\n    <div class='text-center'>\n      <button \n        class='btn btn-sm btn-success mr-1' \n        (click)='approvePhoto(photo.id)'>Approve\n      </button>\n      <button \n        class='btn btn-sm btndanger' \n        (click)='rejectPhoto(photo.id)'>Reject\n      </button>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos!: Photo[];\n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe(photos => {\n      this.photos = photos;\n    });\n  }\n  \n  approvePhoto(photoId: number) {\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    });\n  }\n\n  rejectPhoto(photoId: number) {\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>Not found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { User } from './../_models/user';\nimport { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl: string = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n  login(model: User) {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if(user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: User) {\n    return this.http.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user : User) => {\n        if(user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the chrome dev tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - make sure it is correct</li>\n    <li>Reproduce the error in Postman - If we see the same response, then the issue is not with Angular</li>\n  </ol>\n  <p>Following is the stack trace - this is where your investigation should start!</p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[] = [];\n  user!: User;\n  constructor(private viewContainerRef: ViewContainerRef, \n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user!;\n      })\n    }\n\n  ngOnInit(): void {\n    if(!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type:'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333'\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if(this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n}\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result!: T;\r\n  pagination!: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from './../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentuser!: User | null;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentuser = user);\n    if(currentuser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentuser.token}`\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn-group\" name=\"container\">\n    <button \n      class=\"btn btn-primary\" \n      btnRadio='Unread' \n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\">\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n\n    <button \n      class=\"btn btn-primary\" \n      btnRadio='Inbox' \n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\">\n      <i class=\"fa fa-envelope-open\"></i> Inbox\n    </button>\n\n    <button \n      class=\"btn btn-primary\" \n      btnRadio='Outbox' \n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\">\n      <i class=\"fa fa-paper-plane\"></i> Outbox\n    </button>\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length! > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer;\">\n    <tr>\n      <th style=\"width: 40%;\">Message</th>\n      <th style=\"width: 20%;\">From / To</th>\n      <th style=\"width: 20%;\">Sent / Received</th>\n      <th style=\"width: 20%;\"></th>\n    </tr>\n\n    <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \n      routerLink='{{container === \"Outbox\" \n      ? \"/members/\" + message.recipientUsername \n      : \"/members/\" + message.senderUsername}}' [queryParams]=\"{tab: 3}\">\n\n      <td>{{message.content}}</td>\n      <td>\n        <div *ngIf=\"container === 'Outbox'\">\n          <img \n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{message.recipientPhotoUrl || './../../../assets/user.png'}}\"\n            alt=\"{{message.recipientUsername}}\">\n          <strong>{{message.recipientUsername | titlecase}}</strong>\n        </div>\n\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img \n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{message.senderPhotoUrl || './../../../assets/user.png'}}\"\n            alt=\"{{message.senderUsername}}\">\n          <strong>{{message.senderUsername | titlecase}}</strong>\n        </div>\n      </td>\n      <td>{{message.messageSent | timeago}}</td>\n      <td>\n        <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\">\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { MessageService } from '../_services/message.service';\nimport { ConfirmService } from './../_services/confirm.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination!: Pagination;\n  container: string = 'Unread';\n  pageNumber: number = 1;\n  pageSize: number = 5;\n  loading: boolean = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe(response => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n      if (result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        })\n      }\n    });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                this.toastr.error(error.statusText, error.status.toString());\n              } else {\n                this.toastr.error(error.error, error.status.toString());\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status.toString());\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/_models/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user: any) => {\n        if(user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n        return false;\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { Photo } from '../_models/photo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl: string = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n\n  getPhotosForApproval() {\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\n  }\n  approvePhoto(photoId: number) {\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n  rejectPhoto(photoId: number) {\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { RolesModalComponent } from './../../modals/roles-modal/roles-modal.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users!: Partial<User[]>;\n  bsModalRef!: BsModalRef;\n\n  constructor(private adminService: AdminService,\n    private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users!;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user, \n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    \n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any[]) => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el=> el.name)]\n      };\n\n      if(rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles];\n        });\n      }\n    });\n\n  }\n\n  private getRolesArray(user: User) {\n    const roles: any[] = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'}\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for(const userRole of userRoles) {\n        if(role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n\n      if(!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%;\">Username</th>\n      <th style=\"width: 40%;\">Active roles</th>\n      <th style=\"width: 30%;\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user!.username}}</td>\n      <td>{{user!.roles}}</td>\n      <td><button (click)=\"openRolesModal(user!)\" class=\"btn btn-info\">Edit Roles</button></td>\n    </tr>\n  </table>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from 'src/app/_models/message';\nimport { Member } from './../../_models/member';\nimport { MembersService } from './../../_services/members.service';\nimport { MessageService } from './../../_services/message.service';\nimport { take } from 'rxjs/operators';\nimport { PresenceService } from './../../_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs!: TabsetComponent;\n  member!: Member;\n  galleryOptions!: NgxGalleryOptions[];\n  galleryImages!: NgxGalleryImage[];\n  activeTab!: TabDirective;\n  messages: Message[] = [];\n  user!: User;\n\n  constructor(public presence: PresenceService, private route: ActivatedRoute,\n    private messageService: MessageService, private accountService: AccountService,\n    private router: Router) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user!);\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ]\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for(const photo of this.member.photos)\n    {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    }\n    return imageUrls;\n  }\n\n  // loadMember() {\n  //   this.memberService.getMember(this.route.snapshot.paramMap.get('username') || '{}').subscribe(member => {\n  //     this.member = member;\n  //   })\n  // }\n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n      this.messages = messages;\n    });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n \n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if(this.activeTab.heading === 'Messages' && this.messages.length === 0)\n      this.messageService.createHubConnection(this.user, this.member.username);\n    else \n      this.messageService.stopHubConnection();\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n      class=\"card-img-top img-thumbnail\">\n      <div class=\"card-body\">\n        <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async)!.includes(member.username)\">\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p>{{member.city}}, {{member.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{member.age}}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\n        <h4>Description</h4>\n        <p>{{member.introduction}}</p>\n        <h4>Looking for</h4>\n        <p>{{member.lookingFor}}</p>\n      </tab>\n      <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{member.interests}}</p>\n      </tab>\n      <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"\n          style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\n      </tab>\n      <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from './../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) {\n\n  }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map (user => {\n        if(user)\n          return true;\n\n        this.toastr.error('You shall not pass!');\n        return false;\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\nimport { Message } from '../_models/message';\nimport { environment } from 'src/environments/environment';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Group } from './../_models/group';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl: string = environment.apiUrl;\n  hubUrl: string = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User, otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch(error => console.log(error));\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    });\n\n    this.hubConnection.on('NewMessage', message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message]);\n      });\n    });\n\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\n      if(group.connections.some(x => x.username === otherUsername)) {\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if(!message.dateRead) {\n              message.dateRead = new Date(Date.now())\n            }\n          })\n\n          this.messageThreadSource.next([...messages]);\n        });\n      }\n    });\n  }\n\n  stopHubConnection() {\n    if(this.hubConnection) {\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber: number, pageSize: number, container: string) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\n      .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label>Age from: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\"\n        [(ngModel)]=\"userParams.minAge\">\n    </div>\n    <div class=\"form-group\">\n      <label>Age to: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Show: </label>\n      <select name=\"gender\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\" style=\"width: 130px\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">\n      Apply Filters\n    </button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">\n      Reset Filters\n    </button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button \n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"lastActive\" \n          [(ngModel)]=\"userParams.orderBy\">Last Active\n        </button>\n  \n        <button \n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"created\" \n          [(ngModel)]=\"userParams.orderBy\">Newest Members\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"row\">\n  <div *ngFor=\"let member of members\" class=\"col-2\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\">\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from './../../_services/members.service';\nimport { Observable } from 'rxjs';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members!: Member[];\n  pagination!: Pagination;\n  userParams!: UserParams;\n  user!: User;\n  genderList: any = [{value: 'male', display: 'Males'},\n                    {value: 'female', display: 'Females'}];\n\n  constructor(private memberService: MembersService) { \n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n\n  constructor(private accountService: AccountService,\n    private presence: PresenceService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user') || '{}');\n\n    if(user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\n  <h3>Loading...</h3>\n</ngx-spinner>\n<app-nav></app-nav>\n\n<div class=\"container\" style=\"margin-top: 100px;\">\n  <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from './../_services/busy.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Member } from '../_models/member';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl: string = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user!: User;\n  userParams!: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user!;\n      this.userParams = new UserParams(user!);\n    })\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if(response) \n      return of(response);\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }));\n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n\n    if (member) \n      return of(member);\n      \n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { environment } from 'src/environments/environment';\nimport { take } from 'rxjs/operators';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Photo } from 'src/app/_models/photo';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!: Member;\n  uploader!: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user!: User;\n  constructor(private accountService: AccountService,\n    private memberService: MembersService) { \n    this.accountService.currentUser$.pipe(take(1))\n      .subscribe(user => this.user = user!);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  } \n  \n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p => {\n        if(p.isMain) p.isMain = false;\n        if(p.id === photo.id) p.isMain = true;\n      })\n    }) \n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const photo : Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n}","<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img \n      src=\"{{photo.url}}\" \n      alt=\"{{photo.url}}\" \n      class=\"img-thumbnail p-1\"\n      [class.not-approved]=\"!photo.isApproved\">\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\n      <span class=\"text-danger\">Awaiting approval</span>\n    </div>\n    <div class=\"text-center\">\n      <button \n        [disabled]=\"photo.isMain || !photo.isApproved\"\n        (click)=\"setMainPhoto(photo)\"\n        [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\n        class=\"btn btn-sm\"> Main\n      </button>\n      <button \n        [disabled]=\"photo.isMain\"\n        (click)=\"deletePhoto(photo.id)\"\n        class=\"btn btn-sm btn-danger\">\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-3\">\n      <h3>Add Photos</h3>\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop photos here\n      </div>\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br/>\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          </tr>\n          </tbody>\n      </table>\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress\" style=\"\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload all\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel all\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove all\n          </button>\n      </div>\n  </div>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_services/members.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username')!);\r\n  }  \r\n}","<div class=\"form-group\">\n  <input \n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type={{type}}\n    class=\"form-control\" \n    [formControl]=\"$any(ngControl).control\"\n    placeholder={{label}}>\n  <div *ngIf=\"ngControl.control!.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{label}}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.minlength\" class=\"invalid-feedback\">\n    {{label}} must be at least {{ngControl.control?.errors?.minlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.maxlength\"class=\"invalid-feedback\">\n    {{label}} must be at most {{ngControl.control?.errors?.maxlength['requiredLength']}}\n  </div>\n  <div *ngIf=\"ngControl.control?.errors?.isMatching\" class=\"invalid-feedback\">\n    Passwords do not match\n  </div>\n</div>\n","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() type : string = 'text';\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"btn-group\" name=\"predicate\">\n      <button \n        class=\"btn btn-primary\" \n        btnRadio=\"liked\" \n        [(ngModel)]=\"predicate\" \n        (click)=\"loadLikes()\"> Members I like\n      </button>\n      <button \n        class=\"btn btn-primary\" \n        btnRadio=\"likedBy\" \n        [(ngModel)]=\"predicate\" \n        (click)=\"loadLikes()\"> Members who like me\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-2\" *ngFor=\"let member of members\">\n      <app-member-card [member]=\"member!\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\">\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members!: Partial<Member[]>;\n  predicate: string = 'liked';\n  pageNumber: number = 1;\n  pageSize: number = 5;\n  pagination!: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink='/'>Dating App</a>\n    <ul class=\"navbar-nav mr-auto\">\n      <ng-container  *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='/messages' routerLinkActive='active'>Messages</a>\n        </li>\n        <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='/admin' routerLinkActive='active'>Admin</a>\n        </li>\n      </ng-container>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink='/errors' routerLinkActive='active'>Errors</a>\n      </li>\n    </ul>\n\n    <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n      <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\" />\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username| titlecase}}</a>\n      <div class=\"dropdown-menu\" mt-3 *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink='/member/edit' routerLinkActive>Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n\n    <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"d-flex\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n      <input \n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control mr-sm-2\" \n        type=\"text\" \n        placeholder=\"Username\">\n      <input \n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control mr-sm-2\" \n        type=\"password\" \n        placeholder=\"Password\">\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  constructor(public accountService: AccountService, \n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(() => {\n      this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Member } from './../../_models/member';\nimport { ToastrService } from 'ngx-toastr';\nimport { PresenceService } from './../../_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member!: Member;\n  constructor(private memberService: MembersService, private toastr: ToastrService,\n    public presence: PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\">\n        <button routerLink=\"/members/{{member.username}}\" class=\"btn btn-primary\">\n          <i class=\"fa fa-user\"></i>\n        </button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button \n          (click)=\"addLike(member)\"\n          class=\"btn btn-primary\">\n          <i class=\"fa fa-heart\"></i>\n        </button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button \n          routerLink=\"/members/{{member.username}}\"\n          [queryParams]=\"{tab: 3}\"\n          class=\"btn btn-primary\">\n          <i class=\"fa fa-envelope\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\">\n      <span [class.is-online]=\"(presence.onlineUsers$ | async)!.includes(member.username)\">\n        <i class=\"fa fa-user mr-2\"></i>\n      </span>\n      {{member.knownAs}}, {{member.age}} \n    </h6>\n    <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl: string = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username: string) => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username: string) => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message!')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge: number = 18;\r\n  maxAge: number = 99;\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n  orderBy: string = 'lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole='[\"Admin\"]'>\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole='[\"Admin\", \"Moderator\"]'>\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from './../../_services/account.service';\nimport { MembersService } from './../../_services/members.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm!: NgForm;\n  member!: Member;\n  user!: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if(this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, \n    private memberService: MembersService,\n    private toastr: ToastrService) { \n      this.accountService.currentUser$.pipe(take(1))\n        .subscribe(user => this.user = user!);\n    }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username)\n      .subscribe(member => this.member = member);\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    })\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your Profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n        <strong>Information</strong>\n        You have made changes. Any unsaved changes will be lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n      class=\"card-img-top img-thumbnail\">\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p>{{member.city}}, {{member.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{member.age}}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{member.lastActive | timeago}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n          <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading='About {{member.knownAs}}'>\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Looking for</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n          <h4 class=\"mt-2\">Location Details: </h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City: </label>\n            <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n            <label for=\"country\">Country: </label>\n            <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n          </div>\n        </form>\n      </tab>\n      <tab heading='Edit Photos'>\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>","import { PaginatedResult } from '../_models/pagination';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport function getPaginatedResult<T>(url: any, params: any, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map(response => {\r\n      paginatedResult.result = response.body!;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') || '{}');\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { ConfirmService } from './../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if(component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancelText!: string;\n  result!: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n \n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n  <button \n    type=\"button\" \n    class=\"btn btn-success\" \n    (click)=\"confirm()\">\n    {{btnOkText}}\n  </button>\n  <button \n    type=\"button\" \n    class=\"btn btn-danger\" \n    (click)=\"decline()\">\n    {{btnCancelText}}\n  </button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport {AuthGuard} from './_guards/auth.guard';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]}\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDialogComponent } from './../modals/confirm-dialog/confirm-dialog.component';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', \n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok', btnCancelText = 'Cancel'): Observable<boolean> {\n      const config = {\n        initialState: {\n          title,\n          message,\n          btnOkText,\n          btnCancelText\n        }\n      }\n      this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n      return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer: any) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles: any[] = [];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n \n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{user.username}}</h4>\n  <button \n    type=\"button\" \n    aria-label=\"Close\" \n    class=\"close pull-right\"\n    (click)=\"bsModalRef.hide()\"\n    >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input \n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        value=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n      >      \n      <label>{{role.name}}</label>  \n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button \n    type=\"button\" \n    class=\"btn btn-default\"\n    (click)=\"bsModalRef.hide()\"> Cancel\n  </button>\n\n  <button \n    type=\"button\" \n    class=\"btn btn-success\"\n    (click)=\"updateRoles()\"> Submit\n  </button>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}